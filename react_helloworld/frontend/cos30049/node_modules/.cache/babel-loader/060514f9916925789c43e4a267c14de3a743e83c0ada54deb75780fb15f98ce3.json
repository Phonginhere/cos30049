{"ast":null,"code":"var _jsxFileName = \"/Users/phongporter/Documents/GITHUB/cos30049/react_helloworld/frontend/cos30049/src/components/Body.js\",\n  _s = $RefreshSig$();\n// src/components/Body.js\nimport React, { useState, useEffect } from 'react';\nimport './Body.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Body = () => {\n  _s();\n  const [tableData, setTableData] = useState([]); // Original Data\n  const [filteredData, setFilteredData] = useState([]); // Data after Filtering\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  // Search States\n  const [searchCountry, setSearchCountry] = useState('');\n  const [searchYear, setSearchYear] = useState('');\n  const [searchPollutant, setSearchPollutant] = useState('');\n  const [searchExposureMean, setSearchExposureMean] = useState('');\n  const [searchUnits, setSearchUnits] = useState('');\n  const [searchBurdenMean, setSearchBurdenMean] = useState('');\n  const [searchMeasure, setSearchMeasure] = useState('');\n  const [searchMetric, setSearchMetric] = useState('');\n  const [searchCauseName, setSearchCauseName] = useState('');\n\n  // Pagination States\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 10; // Adjust as needed\n\n  // Fetch data from FastAPI on component mount\n  useEffect(() => {\n    fetch('http://localhost:8000/api/data') // FastAPI endpoint\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      // Process data to rename 'UNNAMED: 0' to 'index'\n      const processedData = data.data.map(item => {\n        const newItem = {\n          ...item\n        };\n        if ('UNNAMED: 0' in newItem) {\n          newItem.index = newItem['UNNAMED: 0'];\n          delete newItem['UNNAMED: 0'];\n        }\n        return newItem;\n      });\n      setTableData(processedData); // Store original data\n      setFilteredData(processedData); // Initialize filtered data\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n      setError(true);\n      setLoading(false);\n    });\n  }, []);\n\n  // Handle Search Filtering\n  useEffect(() => {\n    let filtered = tableData;\n    if (searchCountry.trim() !== '') {\n      filtered = filtered.filter(item => item.Country.toLowerCase().includes(searchCountry.toLowerCase()));\n    }\n    if (searchYear.trim() !== '') {\n      filtered = filtered.filter(item => item.Year.toString().includes(searchYear));\n    }\n    if (searchPollutant.trim() !== '') {\n      filtered = filtered.filter(item => item.Pollutant.toLowerCase().includes(searchPollutant.toLowerCase()));\n    }\n    if (searchExposureMean.trim() !== '') {\n      filtered = filtered.filter(item => item['Exposure Mean'].toString().includes(searchExposureMean));\n    }\n    if (searchUnits.trim() !== '') {\n      filtered = filtered.filter(item => item.Units.toLowerCase().includes(searchUnits.toLowerCase()));\n    }\n    if (searchBurdenMean.trim() !== '') {\n      filtered = filtered.filter(item => item['Burden Mean'].toString().includes(searchBurdenMean));\n    }\n    if (searchMeasure.trim() !== '') {\n      filtered = filtered.filter(item => item.Measure.toLowerCase().includes(searchMeasure.toLowerCase()));\n    }\n    if (searchMetric.trim() !== '') {\n      filtered = filtered.filter(item => item.Metric.toLowerCase().includes(searchMetric.toLowerCase()));\n    }\n    if (searchCauseName.trim() !== '') {\n      filtered = filtered.filter(item => item['Cause Name'].toLowerCase().includes(searchCauseName.toLowerCase()));\n    }\n    setFilteredData(filtered);\n    setCurrentPage(1); // Reset to first page on search\n  }, [searchCountry, searchYear, searchPollutant, searchExposureMean, searchUnits, searchBurdenMean, searchMeasure, searchMetric, searchCauseName, tableData]);\n\n  // Calculate the indices for slicing the data\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = filteredData.slice(indexOfFirstItem, indexOfLastItem);\n\n  // Calculate total pages\n  const totalPages = Math.ceil(filteredData.length / itemsPerPage);\n\n  // Handle Page Change\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  // Handle Reset Search\n  const handleReset = () => {\n    setSearchCountry('');\n    setSearchYear('');\n    setSearchPollutant('');\n    setSearchExposureMean('');\n    setSearchUnits('');\n    setSearchBurdenMean('');\n    setSearchMeasure('');\n    setSearchMetric('');\n    setSearchCauseName('');\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Error loading data.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Data from CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by Country\",\n          value: searchCountry,\n          onChange: e => setSearchCountry(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by Year\",\n          value: searchYear,\n          onChange: e => setSearchYear(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by Pollutant\",\n          value: searchPollutant,\n          onChange: e => setSearchPollutant(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by Exposure Mean\",\n          value: searchExposureMean,\n          onChange: e => setSearchExposureMean(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by Units\",\n          value: searchUnits,\n          onChange: e => setSearchUnits(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by Burden Mean\",\n          value: searchBurdenMean,\n          onChange: e => setSearchBurdenMean(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by Measure\",\n          value: searchMeasure,\n          onChange: e => setSearchMeasure(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by Metric\",\n          value: searchMetric,\n          onChange: e => setSearchMetric(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by Cause Name\",\n          value: searchCauseName,\n          onChange: e => setSearchCauseName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReset,\n        className: \"reset-button\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"data-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: filteredData.length > 0 && Object.keys(filteredData[0]).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: key === 'UNNAMED: 0' ? 'INDEX' : key.toUpperCase()\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: currentItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"100%\",\n            children: \"No data available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this) : currentItems.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.values(row).map((value, idx) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: value\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 19\n          }, this))\n        }, row.index || index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => paginate(currentPage - 1),\n        disabled: currentPage === 1,\n        className: \"pagination-button\",\n        children: \"\\xAB Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), Array.from({\n        length: totalPages\n      }, (_, i) => i + 1).map(number => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => paginate(number),\n        className: `pagination-button ${currentPage === number ? 'active' : ''}`,\n        children: number\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => paginate(currentPage + 1),\n        disabled: currentPage === totalPages,\n        className: \"pagination-button\",\n        children: \"Next \\xBB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n_s(Body, \"2nns7O174xlVJAtsXuL86+mTF7M=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Body","_s","tableData","setTableData","filteredData","setFilteredData","loading","setLoading","error","setError","searchCountry","setSearchCountry","searchYear","setSearchYear","searchPollutant","setSearchPollutant","searchExposureMean","setSearchExposureMean","searchUnits","setSearchUnits","searchBurdenMean","setSearchBurdenMean","searchMeasure","setSearchMeasure","searchMetric","setSearchMetric","searchCauseName","setSearchCauseName","currentPage","setCurrentPage","itemsPerPage","fetch","then","response","ok","Error","json","data","processedData","map","item","newItem","index","catch","console","filtered","trim","filter","Country","toLowerCase","includes","Year","toString","Pollutant","Units","Measure","Metric","indexOfLastItem","indexOfFirstItem","currentItems","slice","totalPages","Math","ceil","length","paginate","pageNumber","handleReset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","Object","keys","key","toUpperCase","colSpan","row","values","idx","disabled","Array","from","_","i","number","_c","$RefreshReg$"],"sources":["/Users/phongporter/Documents/GITHUB/cos30049/react_helloworld/frontend/cos30049/src/components/Body.js"],"sourcesContent":["// src/components/Body.js\nimport React, { useState, useEffect } from 'react';\nimport './Body.css';\n\nconst Body = () => {\n  const [tableData, setTableData] = useState([]); // Original Data\n  const [filteredData, setFilteredData] = useState([]); // Data after Filtering\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  // Search States\n  const [searchCountry, setSearchCountry] = useState('');\n  const [searchYear, setSearchYear] = useState('');\n  const [searchPollutant, setSearchPollutant] = useState('');\n  const [searchExposureMean, setSearchExposureMean] = useState('');\n  const [searchUnits, setSearchUnits] = useState('');\n  const [searchBurdenMean, setSearchBurdenMean] = useState('');\n  const [searchMeasure, setSearchMeasure] = useState('');\n  const [searchMetric, setSearchMetric] = useState('');\n  const [searchCauseName, setSearchCauseName] = useState('');\n\n  // Pagination States\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 10; // Adjust as needed\n\n  // Fetch data from FastAPI on component mount\n  useEffect(() => {\n    fetch('http://localhost:8000/api/data') // FastAPI endpoint\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then((data) => {\n        // Process data to rename 'UNNAMED: 0' to 'index'\n        const processedData = data.data.map(item => {\n          const newItem = { ...item };\n          if ('UNNAMED: 0' in newItem) {\n            newItem.index = newItem['UNNAMED: 0'];\n            delete newItem['UNNAMED: 0'];\n          }\n          return newItem;\n        });\n\n        setTableData(processedData);      // Store original data\n        setFilteredData(processedData);   // Initialize filtered data\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error);\n        setError(true);\n        setLoading(false);\n      });\n  }, []);\n\n  // Handle Search Filtering\n  useEffect(() => {\n    let filtered = tableData;\n\n    if (searchCountry.trim() !== '') {\n      filtered = filtered.filter((item) =>\n        item.Country.toLowerCase().includes(searchCountry.toLowerCase())\n      );\n    }\n\n    if (searchYear.trim() !== '') {\n      filtered = filtered.filter((item) =>\n        item.Year.toString().includes(searchYear)\n      );\n    }\n\n    if (searchPollutant.trim() !== '') {\n      filtered = filtered.filter((item) =>\n        item.Pollutant.toLowerCase().includes(searchPollutant.toLowerCase())\n      );\n    }\n\n    if (searchExposureMean.trim() !== '') {\n      filtered = filtered.filter((item) =>\n        item['Exposure Mean'].toString().includes(searchExposureMean)\n      );\n    }\n\n    if (searchUnits.trim() !== '') {\n      filtered = filtered.filter((item) =>\n        item.Units.toLowerCase().includes(searchUnits.toLowerCase())\n      );\n    }\n\n    if (searchBurdenMean.trim() !== '') {\n      filtered = filtered.filter((item) =>\n        item['Burden Mean'].toString().includes(searchBurdenMean)\n      );\n    }\n\n    if (searchMeasure.trim() !== '') {\n      filtered = filtered.filter((item) =>\n        item.Measure.toLowerCase().includes(searchMeasure.toLowerCase())\n      );\n    }\n\n    if (searchMetric.trim() !== '') {\n      filtered = filtered.filter((item) =>\n        item.Metric.toLowerCase().includes(searchMetric.toLowerCase())\n      );\n    }\n\n    if (searchCauseName.trim() !== '') {\n      filtered = filtered.filter((item) =>\n        item['Cause Name'].toLowerCase().includes(searchCauseName.toLowerCase())\n      );\n    }\n\n    setFilteredData(filtered);\n    setCurrentPage(1); // Reset to first page on search\n  }, [\n    searchCountry,\n    searchYear,\n    searchPollutant,\n    searchExposureMean,\n    searchUnits,\n    searchBurdenMean,\n    searchMeasure,\n    searchMetric,\n    searchCauseName,\n    tableData,\n  ]);\n\n  // Calculate the indices for slicing the data\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = filteredData.slice(indexOfFirstItem, indexOfLastItem);\n\n  // Calculate total pages\n  const totalPages = Math.ceil(filteredData.length / itemsPerPage);\n\n  // Handle Page Change\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  // Handle Reset Search\n  const handleReset = () => {\n    setSearchCountry('');\n    setSearchYear('');\n    setSearchPollutant('');\n    setSearchExposureMean('');\n    setSearchUnits('');\n    setSearchBurdenMean('');\n    setSearchMeasure('');\n    setSearchMetric('');\n    setSearchCauseName('');\n  };\n\n  if (loading) {\n    return (\n      <div className=\"body-container\">\n        <h2>Loading data...</h2>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"body-container\">\n        <h2>Error loading data.</h2>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"body-container\">\n      <h2>Data from CSV</h2>\n\n      {/* Search Section */}\n      <div className=\"search-section\">\n        <div className=\"search-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Search by Country\"\n            value={searchCountry}\n            onChange={(e) => setSearchCountry(e.target.value)}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Search by Year\"\n            value={searchYear}\n            onChange={(e) => setSearchYear(e.target.value)}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Search by Pollutant\"\n            value={searchPollutant}\n            onChange={(e) => setSearchPollutant(e.target.value)}\n          />\n        </div>\n        <div className=\"search-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Search by Exposure Mean\"\n            value={searchExposureMean}\n            onChange={(e) => setSearchExposureMean(e.target.value)}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Search by Units\"\n            value={searchUnits}\n            onChange={(e) => setSearchUnits(e.target.value)}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Search by Burden Mean\"\n            value={searchBurdenMean}\n            onChange={(e) => setSearchBurdenMean(e.target.value)}\n          />\n        </div>\n        <div className=\"search-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Search by Measure\"\n            value={searchMeasure}\n            onChange={(e) => setSearchMeasure(e.target.value)}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Search by Metric\"\n            value={searchMetric}\n            onChange={(e) => setSearchMetric(e.target.value)}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Search by Cause Name\"\n            value={searchCauseName}\n            onChange={(e) => setSearchCauseName(e.target.value)}\n          />\n        </div>\n        <button onClick={handleReset} className=\"reset-button\">Reset</button>\n      </div>\n\n      {/* Table Section */}\n      <table className=\"data-table\">\n        <thead>\n          <tr>\n            {/* Dynamically create table headers based on keys */}\n            {filteredData.length > 0 &&\n              Object.keys(filteredData[0]).map((key) => (\n                <th key={key}>{key === 'UNNAMED: 0' ? 'INDEX' : key.toUpperCase()}</th>\n              ))}\n          </tr>\n        </thead>\n        <tbody>\n          {currentItems.length === 0 ? (\n            <tr>\n              <td colSpan=\"100%\">No data available.</td>\n            </tr>\n          ) : (\n            currentItems.map((row, index) => (\n              <tr key={row.index || index}>\n                {Object.values(row).map((value, idx) => (\n                  <td key={idx}>{value}</td>\n                ))}\n              </tr>\n            ))\n          )}\n        </tbody>\n      </table>\n\n      {/* Pagination Controls */}\n      <div className=\"pagination\">\n        <button\n          onClick={() => paginate(currentPage - 1)}\n          disabled={currentPage === 1}\n          className=\"pagination-button\"\n        >\n          &laquo; Previous\n        </button>\n\n        {/* Page Numbers */}\n        {Array.from({ length: totalPages }, (_, i) => i + 1).map(number => (\n          <button\n            key={number}\n            onClick={() => paginate(number)}\n            className={`pagination-button ${currentPage === number ? 'active' : ''}`}\n          >\n            {number}\n          </button>\n        ))}\n\n        <button\n          onClick={() => paginate(currentPage + 1)}\n          disabled={currentPage === totalPages}\n          className=\"pagination-button\"\n        >\n          Next &raquo;\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Body;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}