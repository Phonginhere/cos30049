{"ast":null,"code":"var _jsxFileName = \"/Users/phongporter/Documents/GITHUB/cos30049/react_helloworld/frontend/cos30049/src/components/Body.js\",\n  _s = $RefreshSig$();\n// src/components/Body.js\nimport React, { useState, useEffect } from 'react';\nimport './Body.css';\nimport Pagination from './Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Body = () => {\n  _s();\n  const [tableData, setTableData] = useState([]); // Original Data\n  const [filteredData, setFilteredData] = useState([]); // Data after Filtering\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  // Search States\n  const [searchCountry, setSearchCountry] = useState('');\n  const [searchYear, setSearchYear] = useState('');\n  const [searchPollutant, setSearchPollutant] = useState('');\n  const [searchExposureMean, setSearchExposureMean] = useState('');\n  const [searchUnits, setSearchUnits] = useState('');\n  const [searchBurdenMean, setSearchBurdenMean] = useState('');\n  const [searchMeasure, setSearchMeasure] = useState('');\n  const [searchMetric, setSearchMetric] = useState('');\n  const [searchCauseName, setSearchCauseName] = useState('');\n  const [uniqueYears, setUniqueYears] = useState([]);\n  const [uniquePollutants, setUniquePollutants] = useState([]);\n  const [uniqueUnits, setUniqueUnits] = useState([]);\n  const [uniqueMeasures, setUniqueMeasures] = useState([]);\n  const [uniqueMetrics, setUniqueMetrics] = useState([]);\n  const [uniqueCauseNames, setUniqueCauseNames] = useState([]);\n\n  // Pagination States\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(10); // Default to 10\n\n  // Fetch data from FastAPI on component mount\n  useEffect(() => {\n    fetch('http://localhost:8000/api/data') // Replace with your FastAPI endpoint\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      // Process data to rename 'UNNAMED: 0' to 'index'\n      const processedData = data.data.map((item, idx) => {\n        const newItem = {\n          ...item\n        };\n        if ('UNNAMED: 0' in newItem) {\n          newItem.index = newItem['UNNAMED: 0'];\n          delete newItem['UNNAMED: 0'];\n        } else {\n          newItem.index = idx + 1; // Fallback to sequential index\n        }\n        return newItem;\n      });\n      setTableData(processedData); // Store original data\n      setFilteredData(processedData); // Initialize filtered data\n\n      // Extract unique years\n      const years = Array.from(new Set(processedData.map(item => item.Year))).sort((a, b) => a - b);\n      setUniqueYears(years);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n      setError(true);\n      setLoading(false);\n    });\n  }, []);\n\n  // Handle Search Filtering\n  useEffect(() => {\n    let filtered = tableData;\n    if (searchCountry.trim() !== '') {\n      filtered = filtered.filter(item => item.Country.toLowerCase().includes(searchCountry.toLowerCase()));\n    }\n    if (searchYear.trim() !== '') {\n      filtered = filtered.filter(item => item.Year.toString().includes(searchYear));\n    }\n    if (searchPollutant.trim() !== '') {\n      filtered = filtered.filter(item => item.Pollutant.toLowerCase().includes(searchPollutant.toLowerCase()));\n    }\n    if (searchExposureMean.trim() !== '') {\n      filtered = filtered.filter(item => item['Exposure Mean'].toString().includes(searchExposureMean));\n    }\n    if (searchUnits.trim() !== '') {\n      filtered = filtered.filter(item => item.Units.toLowerCase().includes(searchUnits.toLowerCase()));\n    }\n    if (searchBurdenMean.trim() !== '') {\n      filtered = filtered.filter(item => item['Burden Mean'].toString().includes(searchBurdenMean));\n    }\n    if (searchMeasure.trim() !== '') {\n      filtered = filtered.filter(item => item.Measure.toLowerCase().includes(searchMeasure.toLowerCase()));\n    }\n    if (searchMetric.trim() !== '') {\n      filtered = filtered.filter(item => item.Metric.toLowerCase().includes(searchMetric.toLowerCase()));\n    }\n    if (searchCauseName.trim() !== '') {\n      filtered = filtered.filter(item => item['Cause Name'].toLowerCase().includes(searchCauseName.toLowerCase()));\n    }\n    setFilteredData(filtered);\n    setCurrentPage(1); // Reset to first page on search\n  }, [searchCountry, searchYear, searchPollutant, searchExposureMean, searchUnits, searchBurdenMean, searchMeasure, searchMetric, searchCauseName, tableData]);\n\n  // Calculate total pages\n  const totalPages = itemsPerPage === 'all' ? 1 : Math.ceil(filteredData.length / itemsPerPage);\n\n  // Calculate current items to display\n  const indexOfLastItem = itemsPerPage === 'all' ? filteredData.length : currentPage * itemsPerPage;\n  const indexOfFirstItem = itemsPerPage === 'all' ? 0 : indexOfLastItem - itemsPerPage;\n  const currentItems = itemsPerPage === 'all' ? filteredData : filteredData.slice(indexOfFirstItem, indexOfLastItem);\n\n  // Handle Page Change\n  const handlePageChange = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  // Handle Reset Search\n  const handleReset = () => {\n    setSearchCountry('');\n    setSearchYear('');\n    setSearchPollutant('');\n    setSearchExposureMean('');\n    setSearchUnits('');\n    setSearchBurdenMean('');\n    setSearchMeasure('');\n    setSearchMetric('');\n    setSearchCauseName('');\n    setCurrentPage(1);\n    setItemsPerPage(10);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Error loading data.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Data from CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by Country\",\n          value: searchCountry,\n          onChange: e => setSearchCountry(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"searchYear\",\n          value: searchYear,\n          onChange: e => setSearchYear(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Years\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), uniqueYears.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: year,\n            children: year\n          }, year, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by Pollutant\",\n          value: searchPollutant,\n          onChange: e => setSearchPollutant(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by Exposure Mean\",\n          value: searchExposureMean,\n          onChange: e => setSearchExposureMean(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by Units\",\n          value: searchUnits,\n          onChange: e => setSearchUnits(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by Burden Mean\",\n          value: searchBurdenMean,\n          onChange: e => setSearchBurdenMean(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by Measure\",\n          value: searchMeasure,\n          onChange: e => setSearchMeasure(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by Metric\",\n          value: searchMetric,\n          onChange: e => setSearchMetric(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by Cause Name\",\n          value: searchCauseName,\n          onChange: e => setSearchCauseName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReset,\n        className: \"reset-button\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rows-per-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"rowsPerPage\",\n        children: \"Rows per page:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"rowsPerPage\",\n        value: itemsPerPage === 'all' ? 'all' : itemsPerPage,\n        onChange: e => {\n          const value = e.target.value;\n          setItemsPerPage(value === 'all' ? 'all' : Number(value));\n          setCurrentPage(1); // Reset to first page when items per page changes\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 10,\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 20,\n          children: \"20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 50,\n          children: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 100,\n          children: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"data-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: filteredData.length > 0 && Object.keys(filteredData[0]).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: key === 'UNNAMED: 0' ? 'INDEX' : key.toUpperCase()\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: currentItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"100%\",\n            children: \"No data available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this) : currentItems.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.values(row).map((value, idx) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: value\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 19\n          }, this))\n        }, row.index || index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), filteredData.length > 0 && /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      totalPages: totalPages,\n      onPageChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n_s(Body, \"5zgEcf8r/BIpnMF1vIIjws4GAGw=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useState","useEffect","Pagination","jsxDEV","_jsxDEV","Body","_s","tableData","setTableData","filteredData","setFilteredData","loading","setLoading","error","setError","searchCountry","setSearchCountry","searchYear","setSearchYear","searchPollutant","setSearchPollutant","searchExposureMean","setSearchExposureMean","searchUnits","setSearchUnits","searchBurdenMean","setSearchBurdenMean","searchMeasure","setSearchMeasure","searchMetric","setSearchMetric","searchCauseName","setSearchCauseName","uniqueYears","setUniqueYears","uniquePollutants","setUniquePollutants","uniqueUnits","setUniqueUnits","uniqueMeasures","setUniqueMeasures","uniqueMetrics","setUniqueMetrics","uniqueCauseNames","setUniqueCauseNames","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","fetch","then","response","ok","Error","json","data","processedData","map","item","idx","newItem","index","years","Array","from","Set","Year","sort","a","b","catch","console","filtered","trim","filter","Country","toLowerCase","includes","toString","Pollutant","Units","Measure","Metric","totalPages","Math","ceil","length","indexOfLastItem","indexOfFirstItem","currentItems","slice","handlePageChange","pageNumber","handleReset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","id","year","onClick","htmlFor","Number","Object","keys","key","toUpperCase","colSpan","row","values","onPageChange","_c","$RefreshReg$"],"sources":["/Users/phongporter/Documents/GITHUB/cos30049/react_helloworld/frontend/cos30049/src/components/Body.js"],"sourcesContent":["// src/components/Body.js\nimport React, { useState, useEffect } from 'react';\nimport './Body.css';\nimport Pagination from './Pagination';\n\nconst Body = () => {\n  const [tableData, setTableData] = useState([]); // Original Data\n  const [filteredData, setFilteredData] = useState([]); // Data after Filtering\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  // Search States\n  const [searchCountry, setSearchCountry] = useState('');\n  const [searchYear, setSearchYear] = useState('');\n  const [searchPollutant, setSearchPollutant] = useState('');\n  const [searchExposureMean, setSearchExposureMean] = useState('');\n  const [searchUnits, setSearchUnits] = useState('');\n  const [searchBurdenMean, setSearchBurdenMean] = useState('');\n  const [searchMeasure, setSearchMeasure] = useState('');\n  const [searchMetric, setSearchMetric] = useState('');\n  const [searchCauseName, setSearchCauseName] = useState('');\n\n  const [uniqueYears, setUniqueYears] = useState([]);\n  const [uniquePollutants, setUniquePollutants] = useState([]);\n  const [uniqueUnits, setUniqueUnits] = useState([]);\n  const [uniqueMeasures, setUniqueMeasures] = useState([]);\n  const [uniqueMetrics, setUniqueMetrics] = useState([]);\n  const [uniqueCauseNames, setUniqueCauseNames] = useState([]);\n\n  // Pagination States\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(10); // Default to 10\n\n  // Fetch data from FastAPI on component mount\n  useEffect(() => {\n  fetch('http://localhost:8000/api/data') // Replace with your FastAPI endpoint\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    })\n    .then((data) => {\n      // Process data to rename 'UNNAMED: 0' to 'index'\n      const processedData = data.data.map((item, idx) => {\n        const newItem = { ...item };\n        if ('UNNAMED: 0' in newItem) {\n          newItem.index = newItem['UNNAMED: 0'];\n          delete newItem['UNNAMED: 0'];\n        } else {\n          newItem.index = idx + 1; // Fallback to sequential index\n        }\n        return newItem;\n      });\n\n      setTableData(processedData);      // Store original data\n      setFilteredData(processedData);   // Initialize filtered data\n\n      // Extract unique years\n      const years = Array.from(new Set(processedData.map(item => item.Year))).sort((a, b) => a - b);\n      setUniqueYears(years);\n\n      setLoading(false);\n    })\n    .catch((error) => {\n      console.error('Error fetching data:', error);\n      setError(true);\n      setLoading(false);\n    });\n}, []);\n\n\n  // Handle Search Filtering\n  useEffect(() => {\n    let filtered = tableData;\n\n    if (searchCountry.trim() !== '') {\n      filtered = filtered.filter((item) =>\n        item.Country.toLowerCase().includes(searchCountry.toLowerCase())\n      );\n    }\n\n    if (searchYear.trim() !== '') {\n      filtered = filtered.filter((item) =>\n        item.Year.toString().includes(searchYear)\n      );\n    }\n\n    if (searchPollutant.trim() !== '') {\n      filtered = filtered.filter((item) =>\n        item.Pollutant.toLowerCase().includes(searchPollutant.toLowerCase())\n      );\n    }\n\n    if (searchExposureMean.trim() !== '') {\n      filtered = filtered.filter((item) =>\n        item['Exposure Mean'].toString().includes(searchExposureMean)\n      );\n    }\n\n    if (searchUnits.trim() !== '') {\n      filtered = filtered.filter((item) =>\n        item.Units.toLowerCase().includes(searchUnits.toLowerCase())\n      );\n    }\n\n    if (searchBurdenMean.trim() !== '') {\n      filtered = filtered.filter((item) =>\n        item['Burden Mean'].toString().includes(searchBurdenMean)\n      );\n    }\n\n    if (searchMeasure.trim() !== '') {\n      filtered = filtered.filter((item) =>\n        item.Measure.toLowerCase().includes(searchMeasure.toLowerCase())\n      );\n    }\n\n    if (searchMetric.trim() !== '') {\n      filtered = filtered.filter((item) =>\n        item.Metric.toLowerCase().includes(searchMetric.toLowerCase())\n      );\n    }\n\n    if (searchCauseName.trim() !== '') {\n      filtered = filtered.filter((item) =>\n        item['Cause Name'].toLowerCase().includes(searchCauseName.toLowerCase())\n      );\n    }\n\n    setFilteredData(filtered);\n    setCurrentPage(1); // Reset to first page on search\n  }, [\n    searchCountry,\n    searchYear,\n    searchPollutant,\n    searchExposureMean,\n    searchUnits,\n    searchBurdenMean,\n    searchMeasure,\n    searchMetric,\n    searchCauseName,\n    tableData,\n  ]);\n\n  // Calculate total pages\n  const totalPages =\n    itemsPerPage === 'all'\n      ? 1\n      : Math.ceil(filteredData.length / itemsPerPage);\n\n  // Calculate current items to display\n  const indexOfLastItem =\n    itemsPerPage === 'all' ? filteredData.length : currentPage * itemsPerPage;\n  const indexOfFirstItem =\n    itemsPerPage === 'all' ? 0 : indexOfLastItem - itemsPerPage;\n  const currentItems =\n    itemsPerPage === 'all'\n      ? filteredData\n      : filteredData.slice(indexOfFirstItem, indexOfLastItem);\n\n  // Handle Page Change\n  const handlePageChange = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  // Handle Reset Search\n  const handleReset = () => {\n    setSearchCountry('');\n    setSearchYear('');\n    setSearchPollutant('');\n    setSearchExposureMean('');\n    setSearchUnits('');\n    setSearchBurdenMean('');\n    setSearchMeasure('');\n    setSearchMetric('');\n    setSearchCauseName('');\n    setCurrentPage(1);\n    setItemsPerPage(10);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"body-container\">\n        <h2>Loading data...</h2>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"body-container\">\n        <h2>Error loading data.</h2>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"body-container\">\n      <h2>Data from CSV</h2>\n\n      {/* Search Section */}\n      <div className=\"search-section\">\n        <div className=\"search-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Search by Country\"\n            value={searchCountry}\n            onChange={(e) => setSearchCountry(e.target.value)}\n          />\n          <select\n              id=\"searchYear\"\n              value={searchYear}\n              onChange={(e) => setSearchYear(e.target.value)}\n          >\n            <option value=\"\">All Years</option>\n            {uniqueYears.map((year) => (\n                <option key={year} value={year}>\n                  {year}\n                </option>\n            ))}\n          </select>\n          <input\n              type=\"text\"\n              placeholder=\"Search by Pollutant\"\n              value={searchPollutant}\n              onChange={(e) => setSearchPollutant(e.target.value)}\n          />\n        </div>\n        <div className=\"search-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Search by Exposure Mean\"\n            value={searchExposureMean}\n            onChange={(e) => setSearchExposureMean(e.target.value)}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Search by Units\"\n            value={searchUnits}\n            onChange={(e) => setSearchUnits(e.target.value)}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Search by Burden Mean\"\n            value={searchBurdenMean}\n            onChange={(e) => setSearchBurdenMean(e.target.value)}\n          />\n        </div>\n        <div className=\"search-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Search by Measure\"\n            value={searchMeasure}\n            onChange={(e) => setSearchMeasure(e.target.value)}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Search by Metric\"\n            value={searchMetric}\n            onChange={(e) => setSearchMetric(e.target.value)}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Search by Cause Name\"\n            value={searchCauseName}\n            onChange={(e) => setSearchCauseName(e.target.value)}\n          />\n        </div>\n        <button onClick={handleReset} className=\"reset-button\">\n          Reset\n        </button>\n      </div>\n\n      {/* Rows Per Page Selection */}\n      <div className=\"rows-per-page\">\n        <label htmlFor=\"rowsPerPage\">Rows per page:</label>\n        <select\n          id=\"rowsPerPage\"\n          value={itemsPerPage === 'all' ? 'all' : itemsPerPage}\n          onChange={(e) => {\n            const value = e.target.value;\n            setItemsPerPage(value === 'all' ? 'all' : Number(value));\n            setCurrentPage(1); // Reset to first page when items per page changes\n          }}\n        >\n          <option value={10}>10</option>\n          <option value={20}>20</option>\n          <option value={50}>50</option>\n          <option value={100}>100</option>\n          <option value=\"all\">All</option>\n        </select>\n      </div>\n\n      {/* Table Section */}\n      <table className=\"data-table\">\n        <thead>\n          <tr>\n            {/* Dynamically create table headers based on keys */}\n            {filteredData.length > 0 &&\n              Object.keys(filteredData[0]).map((key) => (\n                <th key={key}>\n                  {key === 'UNNAMED: 0' ? 'INDEX' : key.toUpperCase()}\n                </th>\n              ))}\n          </tr>\n        </thead>\n        <tbody>\n          {currentItems.length === 0 ? (\n            <tr>\n              <td colSpan=\"100%\">No data available.</td>\n            </tr>\n          ) : (\n            currentItems.map((row, index) => (\n              <tr key={row.index || index}>\n                {Object.values(row).map((value, idx) => (\n                  <td key={idx}>{value}</td>\n                ))}\n              </tr>\n            ))\n          )}\n        </tbody>\n      </table>\n\n      {/* Pagination Component */}\n      {filteredData.length > 0 && (\n        <Pagination\n          currentPage={currentPage}\n          totalPages={totalPages}\n          onPageChange={handlePageChange}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Body;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}