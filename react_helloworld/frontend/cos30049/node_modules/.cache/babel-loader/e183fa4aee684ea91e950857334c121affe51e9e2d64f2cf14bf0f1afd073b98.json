{"ast":null,"code":"var _jsxFileName = \"/Users/phongporter/Documents/GITHUB/cos30049/react_helloworld/frontend/cos30049/src/components/Body.js\",\n  _s = $RefreshSig$();\n// src/components/Body.js\nimport React, { useState, useEffect } from 'react';\nimport './Body.css';\nimport Pagination from './Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Body = () => {\n  _s();\n  const [tableData, setTableData] = useState([]); // Original Data\n  const [filteredData, setFilteredData] = useState([]); // Data after Filtering\n  const [uniqueYears, setUniqueYears] = useState([]); // Unique Years for Dropdown\n  const [uniquePollutants, setUniquePollutants] = useState([]); // Unique Pollutants\n  const [uniqueUnits, setUniqueUnits] = useState([]); // Unique Units\n  const [uniqueMeasures, setUniqueMeasures] = useState([]); // Unique Measures\n  const [uniqueMetrics, setUniqueMetrics] = useState([]); // Unique Metrics\n  const [uniqueCauseNames, setUniqueCauseNames] = useState([]); // Unique Cause Names\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  // Search States\n  const [searchCountry, setSearchCountry] = useState('');\n  const [searchYear, setSearchYear] = useState('');\n  const [searchPollutant, setSearchPollutant] = useState('');\n  const [searchExposureMean, setSearchExposureMean] = useState('');\n  const [searchUnits, setSearchUnits] = useState('');\n  const [searchBurdenMean, setSearchBurdenMean] = useState('');\n  const [searchMeasure, setSearchMeasure] = useState('');\n  const [searchMetric, setSearchMetric] = useState('');\n  const [searchCauseName, setSearchCauseName] = useState('');\n\n  // Pagination States\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(10); // Default to 10\n\n  // Fetch data from FastAPI on component mount\n  useEffect(() => {\n    fetch('http://localhost:8000/api/data') // Replace with your FastAPI endpoint\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setTableData(data.data); // Store original data\n      setFilteredData(data.data); // Initialize filtered data\n\n      // Extract unique years\n      const years = Array.from(new Set(data.data.map(item => item.Year))).sort((a, b) => a - b);\n      setUniqueYears(years);\n\n      // Extract unique pollutants\n      const pollutants = Array.from(new Set(data.data.map(item => item.Pollutant))).sort();\n      setUniquePollutants(pollutants);\n\n      // Extract unique units\n      const units = Array.from(new Set(data.data.map(item => item.Units))).sort();\n      setUniqueUnits(units);\n\n      // Extract unique measures\n      const measures = Array.from(new Set(data.data.map(item => item.Measure))).sort();\n      setUniqueMeasures(measures);\n\n      // Extract unique metrics\n      const metrics = Array.from(new Set(data.data.map(item => item.Metric))).sort();\n      setUniqueMetrics(metrics);\n\n      // Extract unique cause names\n      const causeNames = Array.from(new Set(data.data.map(item => item['Cause Name']))).sort();\n      setUniqueCauseNames(causeNames);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n      setError(true);\n      setLoading(false);\n    });\n  }, []);\n\n  // Handle Search Filtering\n  useEffect(() => {\n    let filtered = tableData;\n    if (searchCountry.trim() !== '') {\n      filtered = filtered.filter(item => item.Country.toLowerCase().includes(searchCountry.toLowerCase()));\n    }\n    if (searchYear !== '') {\n      // Dropdown selection\n      filtered = filtered.filter(item => item.Year === parseInt(searchYear));\n    }\n    if (searchPollutant !== '') {\n      // Dropdown selection\n      filtered = filtered.filter(item => item.Pollutant === searchPollutant);\n    }\n    if (searchExposureMean.trim() !== '') {\n      filtered = filtered.filter(item => item['Exposure Mean'].toString().includes(searchExposureMean));\n    }\n    if (searchUnits !== '') {\n      // Dropdown selection\n      filtered = filtered.filter(item => item.Units === searchUnits);\n    }\n    if (searchBurdenMean.trim() !== '') {\n      filtered = filtered.filter(item => item['Burden Mean'].toString().includes(searchBurdenMean));\n    }\n    if (searchMeasure !== '') {\n      // Dropdown selection\n      filtered = filtered.filter(item => item.Measure === searchMeasure);\n    }\n    if (searchMetric !== '') {\n      // Dropdown selection\n      filtered = filtered.filter(item => item.Metric === searchMetric);\n    }\n    if (searchCauseName !== '') {\n      // Dropdown selection\n      filtered = filtered.filter(item => item['Cause Name'] === searchCauseName);\n    }\n    setFilteredData(filtered);\n    setCurrentPage(1); // Reset to first page on search\n  }, [searchCountry, searchYear, searchPollutant, searchExposureMean, searchUnits, searchBurdenMean, searchMeasure, searchMetric, searchCauseName, tableData]);\n\n  // Calculate total pages\n  const totalPages = itemsPerPage === 'all' ? 1 : Math.ceil(filteredData.length / itemsPerPage);\n\n  // Calculate current items to display\n  const indexOfLastItem = itemsPerPage === 'all' ? filteredData.length : currentPage * itemsPerPage;\n  const indexOfFirstItem = itemsPerPage === 'all' ? 0 : indexOfLastItem - itemsPerPage;\n  const currentItems = itemsPerPage === 'all' ? filteredData : filteredData.slice(indexOfFirstItem, indexOfLastItem);\n\n  // Handle Page Change\n  const handlePageChange = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  // Handle Reset Search\n  const handleReset = () => {\n    setSearchCountry('');\n    setSearchYear('');\n    setSearchPollutant('');\n    setSearchExposureMean('');\n    setSearchUnits('');\n    setSearchBurdenMean('');\n    setSearchMeasure('');\n    setSearchMetric('');\n    setSearchCauseName('');\n    setCurrentPage(1);\n    setItemsPerPage(10);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Error loading data.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Data from CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by Country\",\n          value: searchCountry,\n          onChange: e => setSearchCountry(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"searchYear\",\n          value: searchYear,\n          onChange: e => setSearchYear(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Years\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), uniqueYears.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: year,\n            children: year\n          }, year, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"searchPollutant\",\n          value: searchPollutant,\n          onChange: e => setSearchPollutant(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Pollutants\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), uniquePollutants.map(pollutant => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: pollutant,\n            children: pollutant\n          }, pollutant, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by Exposure Mean\",\n          value: searchExposureMean,\n          onChange: e => setSearchExposureMean(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"searchUnits\",\n          value: searchUnits,\n          onChange: e => setSearchUnits(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Units\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), uniqueUnits.map(unit => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: unit,\n            children: unit\n          }, unit, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by Burden Mean\",\n          value: searchBurdenMean,\n          onChange: e => setSearchBurdenMean(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"searchMeasure\",\n          value: searchMeasure,\n          onChange: e => setSearchMeasure(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Measures\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), uniqueMeasures.map(measure => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: measure,\n            children: measure\n          }, measure, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"searchMetric\",\n          value: searchMetric,\n          onChange: e => setSearchMetric(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Metrics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), uniqueMetrics.map(metric => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: metric,\n            children: metric\n          }, metric, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"searchCauseName\",\n          value: searchCauseName,\n          onChange: e => setSearchCauseName(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Cause Names\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), uniqueCauseNames.map(causeName => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: causeName,\n            children: causeName\n          }, causeName, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReset,\n        className: \"reset-button\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rows-per-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"rowsPerPage\",\n        children: \"Rows per page:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"rowsPerPage\",\n        value: itemsPerPage === 'all' ? 'all' : itemsPerPage,\n        onChange: e => {\n          const value = e.target.value;\n          setItemsPerPage(value === 'all' ? 'all' : Number(value));\n          setCurrentPage(1); // Reset to first page when items per page changes\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 10,\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 20,\n          children: \"20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 50,\n          children: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 100,\n          children: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"data-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: filteredData.length > 0 && Object.keys(filteredData[0]).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n            // Remove onClick for sorting if not implementing sortable columns\n            className: \"sortable\",\n            children: key.toUpperCase()\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: currentItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"100%\",\n            children: \"No data available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this) : currentItems.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.values(row).map((value, idx) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: value\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 19\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this), filteredData.length > 0 && itemsPerPage !== 'all' && /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      totalPages: totalPages,\n      onPageChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n};\n_s(Body, \"YO7yTIWNGY5yhqpndWN3uXQTeLc=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useState","useEffect","Pagination","jsxDEV","_jsxDEV","Body","_s","tableData","setTableData","filteredData","setFilteredData","uniqueYears","setUniqueYears","uniquePollutants","setUniquePollutants","uniqueUnits","setUniqueUnits","uniqueMeasures","setUniqueMeasures","uniqueMetrics","setUniqueMetrics","uniqueCauseNames","setUniqueCauseNames","loading","setLoading","error","setError","searchCountry","setSearchCountry","searchYear","setSearchYear","searchPollutant","setSearchPollutant","searchExposureMean","setSearchExposureMean","searchUnits","setSearchUnits","searchBurdenMean","setSearchBurdenMean","searchMeasure","setSearchMeasure","searchMetric","setSearchMetric","searchCauseName","setSearchCauseName","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","fetch","then","response","ok","Error","json","data","years","Array","from","Set","map","item","Year","sort","a","b","pollutants","Pollutant","units","Units","measures","Measure","metrics","Metric","causeNames","catch","console","filtered","trim","filter","Country","toLowerCase","includes","parseInt","toString","totalPages","Math","ceil","length","indexOfLastItem","indexOfFirstItem","currentItems","slice","handlePageChange","pageNumber","handleReset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","id","year","pollutant","unit","measure","metric","causeName","onClick","htmlFor","Number","Object","keys","key","toUpperCase","colSpan","row","index","values","idx","onPageChange","_c","$RefreshReg$"],"sources":["/Users/phongporter/Documents/GITHUB/cos30049/react_helloworld/frontend/cos30049/src/components/Body.js"],"sourcesContent":["// src/components/Body.js\nimport React, { useState, useEffect } from 'react';\nimport './Body.css';\nimport Pagination from './Pagination';\n\nconst Body = () => {\n  const [tableData, setTableData] = useState([]); // Original Data\n  const [filteredData, setFilteredData] = useState([]); // Data after Filtering\n  const [uniqueYears, setUniqueYears] = useState([]); // Unique Years for Dropdown\n  const [uniquePollutants, setUniquePollutants] = useState([]); // Unique Pollutants\n  const [uniqueUnits, setUniqueUnits] = useState([]); // Unique Units\n  const [uniqueMeasures, setUniqueMeasures] = useState([]); // Unique Measures\n  const [uniqueMetrics, setUniqueMetrics] = useState([]); // Unique Metrics\n  const [uniqueCauseNames, setUniqueCauseNames] = useState([]); // Unique Cause Names\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  // Search States\n  const [searchCountry, setSearchCountry] = useState('');\n  const [searchYear, setSearchYear] = useState('');\n  const [searchPollutant, setSearchPollutant] = useState('');\n  const [searchExposureMean, setSearchExposureMean] = useState('');\n  const [searchUnits, setSearchUnits] = useState('');\n  const [searchBurdenMean, setSearchBurdenMean] = useState('');\n  const [searchMeasure, setSearchMeasure] = useState('');\n  const [searchMetric, setSearchMetric] = useState('');\n  const [searchCauseName, setSearchCauseName] = useState('');\n\n  // Pagination States\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(10); // Default to 10\n\n  // Fetch data from FastAPI on component mount\n  useEffect(() => {\n    fetch('http://localhost:8000/api/data') // Replace with your FastAPI endpoint\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then((data) => {\n        setTableData(data.data);      // Store original data\n        setFilteredData(data.data);   // Initialize filtered data\n\n        // Extract unique years\n        const years = Array.from(new Set(data.data.map(item => item.Year))).sort((a, b) => a - b);\n        setUniqueYears(years);\n\n        // Extract unique pollutants\n        const pollutants = Array.from(new Set(data.data.map(item => item.Pollutant))).sort();\n        setUniquePollutants(pollutants);\n\n        // Extract unique units\n        const units = Array.from(new Set(data.data.map(item => item.Units))).sort();\n        setUniqueUnits(units);\n\n        // Extract unique measures\n        const measures = Array.from(new Set(data.data.map(item => item.Measure))).sort();\n        setUniqueMeasures(measures);\n\n        // Extract unique metrics\n        const metrics = Array.from(new Set(data.data.map(item => item.Metric))).sort();\n        setUniqueMetrics(metrics);\n\n        // Extract unique cause names\n        const causeNames = Array.from(new Set(data.data.map(item => item['Cause Name']))).sort();\n        setUniqueCauseNames(causeNames);\n\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error);\n        setError(true);\n        setLoading(false);\n      });\n  }, []);\n\n  // Handle Search Filtering\n  useEffect(() => {\n    let filtered = tableData;\n\n    if (searchCountry.trim() !== '') {\n      filtered = filtered.filter((item) =>\n        item.Country.toLowerCase().includes(searchCountry.toLowerCase())\n      );\n    }\n\n    if (searchYear !== '') { // Dropdown selection\n      filtered = filtered.filter((item) =>\n        item.Year === parseInt(searchYear)\n      );\n    }\n\n    if (searchPollutant !== '') { // Dropdown selection\n      filtered = filtered.filter((item) =>\n        item.Pollutant === searchPollutant\n      );\n    }\n\n    if (searchExposureMean.trim() !== '') {\n      filtered = filtered.filter((item) =>\n        item['Exposure Mean'].toString().includes(searchExposureMean)\n      );\n    }\n\n    if (searchUnits !== '') { // Dropdown selection\n      filtered = filtered.filter((item) =>\n        item.Units === searchUnits\n      );\n    }\n\n    if (searchBurdenMean.trim() !== '') {\n      filtered = filtered.filter((item) =>\n        item['Burden Mean'].toString().includes(searchBurdenMean)\n      );\n    }\n\n    if (searchMeasure !== '') { // Dropdown selection\n      filtered = filtered.filter((item) =>\n        item.Measure === searchMeasure\n      );\n    }\n\n    if (searchMetric !== '') { // Dropdown selection\n      filtered = filtered.filter((item) =>\n        item.Metric === searchMetric\n      );\n    }\n\n    if (searchCauseName !== '') { // Dropdown selection\n      filtered = filtered.filter((item) =>\n        item['Cause Name'] === searchCauseName\n      );\n    }\n\n    setFilteredData(filtered);\n    setCurrentPage(1); // Reset to first page on search\n  }, [\n    searchCountry,\n    searchYear,\n    searchPollutant,\n    searchExposureMean,\n    searchUnits,\n    searchBurdenMean,\n    searchMeasure,\n    searchMetric,\n    searchCauseName,\n    tableData,\n  ]);\n\n  // Calculate total pages\n  const totalPages =\n    itemsPerPage === 'all'\n      ? 1\n      : Math.ceil(filteredData.length / itemsPerPage);\n\n  // Calculate current items to display\n  const indexOfLastItem =\n    itemsPerPage === 'all' ? filteredData.length : currentPage * itemsPerPage;\n  const indexOfFirstItem =\n    itemsPerPage === 'all' ? 0 : indexOfLastItem - itemsPerPage;\n  const currentItems =\n    itemsPerPage === 'all'\n      ? filteredData\n      : filteredData.slice(indexOfFirstItem, indexOfLastItem);\n\n  // Handle Page Change\n  const handlePageChange = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  // Handle Reset Search\n  const handleReset = () => {\n    setSearchCountry('');\n    setSearchYear('');\n    setSearchPollutant('');\n    setSearchExposureMean('');\n    setSearchUnits('');\n    setSearchBurdenMean('');\n    setSearchMeasure('');\n    setSearchMetric('');\n    setSearchCauseName('');\n    setCurrentPage(1);\n    setItemsPerPage(10);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"body-container\">\n        <h2>Loading data...</h2>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"body-container\">\n        <h2>Error loading data.</h2>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"body-container\">\n      <h2>Data from CSV</h2>\n\n      {/* Search Section */}\n      <div className=\"search-section\">\n        <div className=\"search-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Search by Country\"\n            value={searchCountry}\n            onChange={(e) => setSearchCountry(e.target.value)}\n          />\n          {/* Year Dropdown */}\n          <select\n            id=\"searchYear\"\n            value={searchYear}\n            onChange={(e) => setSearchYear(e.target.value)}\n          >\n            <option value=\"\">All Years</option>\n            {uniqueYears.map((year) => (\n              <option key={year} value={year}>\n                {year}\n              </option>\n            ))}\n          </select>\n          {/* Pollutant Dropdown */}\n          <select\n            id=\"searchPollutant\"\n            value={searchPollutant}\n            onChange={(e) => setSearchPollutant(e.target.value)}\n          >\n            <option value=\"\">All Pollutants</option>\n            {uniquePollutants.map((pollutant) => (\n              <option key={pollutant} value={pollutant}>\n                {pollutant}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"search-group\">\n          {/* Exposure Mean Input */}\n          <input\n            type=\"text\"\n            placeholder=\"Search by Exposure Mean\"\n            value={searchExposureMean}\n            onChange={(e) => setSearchExposureMean(e.target.value)}\n          />\n          {/* Units Dropdown */}\n          <select\n            id=\"searchUnits\"\n            value={searchUnits}\n            onChange={(e) => setSearchUnits(e.target.value)}\n          >\n            <option value=\"\">All Units</option>\n            {uniqueUnits.map((unit) => (\n              <option key={unit} value={unit}>\n                {unit}\n              </option>\n            ))}\n          </select>\n          {/* Burden Mean Input */}\n          <input\n            type=\"text\"\n            placeholder=\"Search by Burden Mean\"\n            value={searchBurdenMean}\n            onChange={(e) => setSearchBurdenMean(e.target.value)}\n          />\n        </div>\n        <div className=\"search-group\">\n          {/* Measure Dropdown */}\n          <select\n            id=\"searchMeasure\"\n            value={searchMeasure}\n            onChange={(e) => setSearchMeasure(e.target.value)}\n          >\n            <option value=\"\">All Measures</option>\n            {uniqueMeasures.map((measure) => (\n              <option key={measure} value={measure}>\n                {measure}\n              </option>\n            ))}\n          </select>\n          {/* Metric Dropdown */}\n          <select\n            id=\"searchMetric\"\n            value={searchMetric}\n            onChange={(e) => setSearchMetric(e.target.value)}\n          >\n            <option value=\"\">All Metrics</option>\n            {uniqueMetrics.map((metric) => (\n              <option key={metric} value={metric}>\n                {metric}\n              </option>\n            ))}\n          </select>\n          {/* Cause Name Dropdown */}\n          <select\n            id=\"searchCauseName\"\n            value={searchCauseName}\n            onChange={(e) => setSearchCauseName(e.target.value)}\n          >\n            <option value=\"\">All Cause Names</option>\n            {uniqueCauseNames.map((causeName) => (\n              <option key={causeName} value={causeName}>\n                {causeName}\n              </option>\n            ))}\n          </select>\n        </div>\n        <button onClick={handleReset} className=\"reset-button\">\n          Reset\n        </button>\n      </div>\n\n      {/* Rows Per Page Selection */}\n      <div className=\"rows-per-page\">\n        <label htmlFor=\"rowsPerPage\">Rows per page:</label>\n        <select\n          id=\"rowsPerPage\"\n          value={itemsPerPage === 'all' ? 'all' : itemsPerPage}\n          onChange={(e) => {\n            const value = e.target.value;\n            setItemsPerPage(value === 'all' ? 'all' : Number(value));\n            setCurrentPage(1); // Reset to first page when items per page changes\n          }}\n        >\n          <option value={10}>10</option>\n          <option value={20}>20</option>\n          <option value={50}>50</option>\n          <option value={100}>100</option>\n          <option value=\"all\">All</option>\n        </select>\n      </div>\n\n      {/* Table Section */}\n      <table className=\"data-table\">\n        <thead>\n          <tr>\n            {/* Dynamically create table headers based on keys */}\n            {filteredData.length > 0 &&\n              Object.keys(filteredData[0]).map((key) => (\n                <th\n                  key={key}\n                  // Remove onClick for sorting if not implementing sortable columns\n                  className=\"sortable\"\n                >\n                  {key.toUpperCase()}\n                  {/* Sort Indicator - Remove if not implementing sorting */}\n                  {/* {sortConfig.key === key\n                    ? sortConfig.direction === 'ascending'\n                      ? ' ↑'\n                      : ' ↓'\n                    : ''} */}\n                </th>\n              ))}\n          </tr>\n        </thead>\n        <tbody>\n          {currentItems.length === 0 ? (\n            <tr>\n              <td colSpan=\"100%\">No data available.</td>\n            </tr>\n          ) : (\n            currentItems.map((row, index) => (\n              <tr key={index}>\n                {Object.values(row).map((value, idx) => (\n                  <td key={idx}>{value}</td>\n                ))}\n              </tr>\n            ))\n          )}\n        </tbody>\n      </table>\n\n      {/* Pagination Component */}\n      {filteredData.length > 0 && itemsPerPage !== 'all' && (\n        <Pagination\n          currentPage={currentPage}\n          totalPages={totalPages}\n          onPageChange={handlePageChange}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Body;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,YAAY;AACnB,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtD,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACpD,MAAM,CAACa,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9D,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACpD,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxD,MAAM,CAACqB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9D,MAAM,CAACuB,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACyB,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;;EAEzC;EACA,MAAM,CAAC2B,aAAa,EAAEC,gBAAgB,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC6B,UAAU,EAAEC,aAAa,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC+B,eAAe,EAAEC,kBAAkB,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACiC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACmC,WAAW,EAAEC,cAAc,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACqC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACuC,aAAa,EAAEC,gBAAgB,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACyC,YAAY,EAAEC,eAAe,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC2C,eAAe,EAAEC,kBAAkB,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;;EAE1D;EACA,MAAM,CAAC6C,WAAW,EAAEC,cAAc,CAAC,GAAG9C,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAAC+C,YAAY,EAAEC,eAAe,CAAC,GAAGhD,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtD;EACAC,SAAS,CAAC,MAAM;IACdgD,KAAK,CAAC,gCAAgC,CAAC,CAAC;IAAA,CACrCC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACd/C,YAAY,CAAC+C,IAAI,CAACA,IAAI,CAAC,CAAC,CAAM;MAC9B7C,eAAe,CAAC6C,IAAI,CAACA,IAAI,CAAC,CAAC,CAAG;;MAE9B;MACA,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACJ,IAAI,CAACA,IAAI,CAACK,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,CAAC;MACzFrD,cAAc,CAAC4C,KAAK,CAAC;;MAErB;MACA,MAAMU,UAAU,GAAGT,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACJ,IAAI,CAACA,IAAI,CAACK,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACM,SAAS,CAAC,CAAC,CAAC,CAACJ,IAAI,CAAC,CAAC;MACpFjD,mBAAmB,CAACoD,UAAU,CAAC;;MAE/B;MACA,MAAME,KAAK,GAAGX,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACJ,IAAI,CAACA,IAAI,CAACK,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACQ,KAAK,CAAC,CAAC,CAAC,CAACN,IAAI,CAAC,CAAC;MAC3E/C,cAAc,CAACoD,KAAK,CAAC;;MAErB;MACA,MAAME,QAAQ,GAAGb,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACJ,IAAI,CAACA,IAAI,CAACK,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACU,OAAO,CAAC,CAAC,CAAC,CAACR,IAAI,CAAC,CAAC;MAChF7C,iBAAiB,CAACoD,QAAQ,CAAC;;MAE3B;MACA,MAAME,OAAO,GAAGf,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACJ,IAAI,CAACA,IAAI,CAACK,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACY,MAAM,CAAC,CAAC,CAAC,CAACV,IAAI,CAAC,CAAC;MAC9E3C,gBAAgB,CAACoD,OAAO,CAAC;;MAEzB;MACA,MAAME,UAAU,GAAGjB,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACJ,IAAI,CAACA,IAAI,CAACK,GAAG,CAACC,IAAI,IAAIA,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;MACxFzC,mBAAmB,CAACoD,UAAU,CAAC;MAE/BlD,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDmD,KAAK,CAAElD,KAAK,IAAK;MAChBmD,OAAO,CAACnD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CC,QAAQ,CAAC,IAAI,CAAC;MACdF,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAvB,SAAS,CAAC,MAAM;IACd,IAAI4E,QAAQ,GAAGtE,SAAS;IAExB,IAAIoB,aAAa,CAACmD,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC/BD,QAAQ,GAAGA,QAAQ,CAACE,MAAM,CAAElB,IAAI,IAC9BA,IAAI,CAACmB,OAAO,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACvD,aAAa,CAACsD,WAAW,CAAC,CAAC,CACjE,CAAC;IACH;IAEA,IAAIpD,UAAU,KAAK,EAAE,EAAE;MAAE;MACvBgD,QAAQ,GAAGA,QAAQ,CAACE,MAAM,CAAElB,IAAI,IAC9BA,IAAI,CAACC,IAAI,KAAKqB,QAAQ,CAACtD,UAAU,CACnC,CAAC;IACH;IAEA,IAAIE,eAAe,KAAK,EAAE,EAAE;MAAE;MAC5B8C,QAAQ,GAAGA,QAAQ,CAACE,MAAM,CAAElB,IAAI,IAC9BA,IAAI,CAACM,SAAS,KAAKpC,eACrB,CAAC;IACH;IAEA,IAAIE,kBAAkB,CAAC6C,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACpCD,QAAQ,GAAGA,QAAQ,CAACE,MAAM,CAAElB,IAAI,IAC9BA,IAAI,CAAC,eAAe,CAAC,CAACuB,QAAQ,CAAC,CAAC,CAACF,QAAQ,CAACjD,kBAAkB,CAC9D,CAAC;IACH;IAEA,IAAIE,WAAW,KAAK,EAAE,EAAE;MAAE;MACxB0C,QAAQ,GAAGA,QAAQ,CAACE,MAAM,CAAElB,IAAI,IAC9BA,IAAI,CAACQ,KAAK,KAAKlC,WACjB,CAAC;IACH;IAEA,IAAIE,gBAAgB,CAACyC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAClCD,QAAQ,GAAGA,QAAQ,CAACE,MAAM,CAAElB,IAAI,IAC9BA,IAAI,CAAC,aAAa,CAAC,CAACuB,QAAQ,CAAC,CAAC,CAACF,QAAQ,CAAC7C,gBAAgB,CAC1D,CAAC;IACH;IAEA,IAAIE,aAAa,KAAK,EAAE,EAAE;MAAE;MAC1BsC,QAAQ,GAAGA,QAAQ,CAACE,MAAM,CAAElB,IAAI,IAC9BA,IAAI,CAACU,OAAO,KAAKhC,aACnB,CAAC;IACH;IAEA,IAAIE,YAAY,KAAK,EAAE,EAAE;MAAE;MACzBoC,QAAQ,GAAGA,QAAQ,CAACE,MAAM,CAAElB,IAAI,IAC9BA,IAAI,CAACY,MAAM,KAAKhC,YAClB,CAAC;IACH;IAEA,IAAIE,eAAe,KAAK,EAAE,EAAE;MAAE;MAC5BkC,QAAQ,GAAGA,QAAQ,CAACE,MAAM,CAAElB,IAAI,IAC9BA,IAAI,CAAC,YAAY,CAAC,KAAKlB,eACzB,CAAC;IACH;IAEAjC,eAAe,CAACmE,QAAQ,CAAC;IACzB/B,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC,EAAE,CACDnB,aAAa,EACbE,UAAU,EACVE,eAAe,EACfE,kBAAkB,EAClBE,WAAW,EACXE,gBAAgB,EAChBE,aAAa,EACbE,YAAY,EACZE,eAAe,EACfpC,SAAS,CACV,CAAC;;EAEF;EACA,MAAM8E,UAAU,GACdtC,YAAY,KAAK,KAAK,GAClB,CAAC,GACDuC,IAAI,CAACC,IAAI,CAAC9E,YAAY,CAAC+E,MAAM,GAAGzC,YAAY,CAAC;;EAEnD;EACA,MAAM0C,eAAe,GACnB1C,YAAY,KAAK,KAAK,GAAGtC,YAAY,CAAC+E,MAAM,GAAG3C,WAAW,GAAGE,YAAY;EAC3E,MAAM2C,gBAAgB,GACpB3C,YAAY,KAAK,KAAK,GAAG,CAAC,GAAG0C,eAAe,GAAG1C,YAAY;EAC7D,MAAM4C,YAAY,GAChB5C,YAAY,KAAK,KAAK,GAClBtC,YAAY,GACZA,YAAY,CAACmF,KAAK,CAACF,gBAAgB,EAAED,eAAe,CAAC;;EAE3D;EACA,MAAMI,gBAAgB,GAAIC,UAAU,IAAK;IACvChD,cAAc,CAACgD,UAAU,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBnE,gBAAgB,CAAC,EAAE,CAAC;IACpBE,aAAa,CAAC,EAAE,CAAC;IACjBE,kBAAkB,CAAC,EAAE,CAAC;IACtBE,qBAAqB,CAAC,EAAE,CAAC;IACzBE,cAAc,CAAC,EAAE,CAAC;IAClBE,mBAAmB,CAAC,EAAE,CAAC;IACvBE,gBAAgB,CAAC,EAAE,CAAC;IACpBE,eAAe,CAAC,EAAE,CAAC;IACnBE,kBAAkB,CAAC,EAAE,CAAC;IACtBE,cAAc,CAAC,CAAC,CAAC;IACjBE,eAAe,CAAC,EAAE,CAAC;EACrB,CAAC;EAED,IAAIzB,OAAO,EAAE;IACX,oBACEnB,OAAA;MAAK4F,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7B7F,OAAA;QAAA6F,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAEV;EAEA,IAAI5E,KAAK,EAAE;IACT,oBACErB,OAAA;MAAK4F,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7B7F,OAAA;QAAA6F,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC;EAEV;EAEA,oBACEjG,OAAA;IAAK4F,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7B7F,OAAA;MAAA6F,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGtBjG,OAAA;MAAK4F,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7B7F,OAAA;QAAK4F,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3B7F,OAAA;UACEkG,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,mBAAmB;UAC/BC,KAAK,EAAE7E,aAAc;UACrB8E,QAAQ,EAAGC,CAAC,IAAK9E,gBAAgB,CAAC8E,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC,eAEFjG,OAAA;UACEwG,EAAE,EAAC,YAAY;UACfJ,KAAK,EAAE3E,UAAW;UAClB4E,QAAQ,EAAGC,CAAC,IAAK5E,aAAa,CAAC4E,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAAP,QAAA,gBAE/C7F,OAAA;YAAQoG,KAAK,EAAC,EAAE;YAAAP,QAAA,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAClC1F,WAAW,CAACiD,GAAG,CAAEiD,IAAI,iBACpBzG,OAAA;YAAmBoG,KAAK,EAAEK,IAAK;YAAAZ,QAAA,EAC5BY;UAAI,GADMA,IAAI;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAET,CACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC,eAETjG,OAAA;UACEwG,EAAE,EAAC,iBAAiB;UACpBJ,KAAK,EAAEzE,eAAgB;UACvB0E,QAAQ,EAAGC,CAAC,IAAK1E,kBAAkB,CAAC0E,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAAP,QAAA,gBAEpD7F,OAAA;YAAQoG,KAAK,EAAC,EAAE;YAAAP,QAAA,EAAC;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACvCxF,gBAAgB,CAAC+C,GAAG,CAAEkD,SAAS,iBAC9B1G,OAAA;YAAwBoG,KAAK,EAAEM,SAAU;YAAAb,QAAA,EACtCa;UAAS,GADCA,SAAS;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEd,CACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACNjG,OAAA;QAAK4F,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAE3B7F,OAAA;UACEkG,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,yBAAyB;UACrCC,KAAK,EAAEvE,kBAAmB;UAC1BwE,QAAQ,EAAGC,CAAC,IAAKxE,qBAAqB,CAACwE,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD,CAAC,eAEFjG,OAAA;UACEwG,EAAE,EAAC,aAAa;UAChBJ,KAAK,EAAErE,WAAY;UACnBsE,QAAQ,EAAGC,CAAC,IAAKtE,cAAc,CAACsE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAAP,QAAA,gBAEhD7F,OAAA;YAAQoG,KAAK,EAAC,EAAE;YAAAP,QAAA,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAClCtF,WAAW,CAAC6C,GAAG,CAAEmD,IAAI,iBACpB3G,OAAA;YAAmBoG,KAAK,EAAEO,IAAK;YAAAd,QAAA,EAC5Bc;UAAI,GADMA,IAAI;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAET,CACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC,eAETjG,OAAA;UACEkG,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,uBAAuB;UACnCC,KAAK,EAAEnE,gBAAiB;UACxBoE,QAAQ,EAAGC,CAAC,IAAKpE,mBAAmB,CAACoE,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNjG,OAAA;QAAK4F,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAE3B7F,OAAA;UACEwG,EAAE,EAAC,eAAe;UAClBJ,KAAK,EAAEjE,aAAc;UACrBkE,QAAQ,EAAGC,CAAC,IAAKlE,gBAAgB,CAACkE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAAP,QAAA,gBAElD7F,OAAA;YAAQoG,KAAK,EAAC,EAAE;YAAAP,QAAA,EAAC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACrCpF,cAAc,CAAC2C,GAAG,CAAEoD,OAAO,iBAC1B5G,OAAA;YAAsBoG,KAAK,EAAEQ,OAAQ;YAAAf,QAAA,EAClCe;UAAO,GADGA,OAAO;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEZ,CACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC,eAETjG,OAAA;UACEwG,EAAE,EAAC,cAAc;UACjBJ,KAAK,EAAE/D,YAAa;UACpBgE,QAAQ,EAAGC,CAAC,IAAKhE,eAAe,CAACgE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAAP,QAAA,gBAEjD7F,OAAA;YAAQoG,KAAK,EAAC,EAAE;YAAAP,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACpClF,aAAa,CAACyC,GAAG,CAAEqD,MAAM,iBACxB7G,OAAA;YAAqBoG,KAAK,EAAES,MAAO;YAAAhB,QAAA,EAChCgB;UAAM,GADIA,MAAM;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEX,CACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC,eAETjG,OAAA;UACEwG,EAAE,EAAC,iBAAiB;UACpBJ,KAAK,EAAE7D,eAAgB;UACvB8D,QAAQ,EAAGC,CAAC,IAAK9D,kBAAkB,CAAC8D,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAAP,QAAA,gBAEpD7F,OAAA;YAAQoG,KAAK,EAAC,EAAE;YAAAP,QAAA,EAAC;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACxChF,gBAAgB,CAACuC,GAAG,CAAEsD,SAAS,iBAC9B9G,OAAA;YAAwBoG,KAAK,EAAEU,SAAU;YAAAjB,QAAA,EACtCiB;UAAS,GADCA,SAAS;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEd,CACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACNjG,OAAA;QAAQ+G,OAAO,EAAEpB,WAAY;QAACC,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAEvD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGNjG,OAAA;MAAK4F,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5B7F,OAAA;QAAOgH,OAAO,EAAC,aAAa;QAAAnB,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnDjG,OAAA;QACEwG,EAAE,EAAC,aAAa;QAChBJ,KAAK,EAAEzD,YAAY,KAAK,KAAK,GAAG,KAAK,GAAGA,YAAa;QACrD0D,QAAQ,EAAGC,CAAC,IAAK;UACf,MAAMF,KAAK,GAAGE,CAAC,CAACC,MAAM,CAACH,KAAK;UAC5BxD,eAAe,CAACwD,KAAK,KAAK,KAAK,GAAG,KAAK,GAAGa,MAAM,CAACb,KAAK,CAAC,CAAC;UACxD1D,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;QACrB,CAAE;QAAAmD,QAAA,gBAEF7F,OAAA;UAAQoG,KAAK,EAAE,EAAG;UAAAP,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC9BjG,OAAA;UAAQoG,KAAK,EAAE,EAAG;UAAAP,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC9BjG,OAAA;UAAQoG,KAAK,EAAE,EAAG;UAAAP,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC9BjG,OAAA;UAAQoG,KAAK,EAAE,GAAI;UAAAP,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAChCjG,OAAA;UAAQoG,KAAK,EAAC,KAAK;UAAAP,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGNjG,OAAA;MAAO4F,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC3B7F,OAAA;QAAA6F,QAAA,eACE7F,OAAA;UAAA6F,QAAA,EAEGxF,YAAY,CAAC+E,MAAM,GAAG,CAAC,IACtB8B,MAAM,CAACC,IAAI,CAAC9G,YAAY,CAAC,CAAC,CAAC,CAAC,CAACmD,GAAG,CAAE4D,GAAG,iBACnCpH,OAAA;YAEE;YACA4F,SAAS,EAAC,UAAU;YAAAC,QAAA,EAEnBuB,GAAG,CAACC,WAAW,CAAC;UAAC,GAJbD,GAAG;YAAAtB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAWN,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRjG,OAAA;QAAA6F,QAAA,EACGN,YAAY,CAACH,MAAM,KAAK,CAAC,gBACxBpF,OAAA;UAAA6F,QAAA,eACE7F,OAAA;YAAIsH,OAAO,EAAC,MAAM;YAAAzB,QAAA,EAAC;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC,GAELV,YAAY,CAAC/B,GAAG,CAAC,CAAC+D,GAAG,EAAEC,KAAK,kBAC1BxH,OAAA;UAAA6F,QAAA,EACGqB,MAAM,CAACO,MAAM,CAACF,GAAG,CAAC,CAAC/D,GAAG,CAAC,CAAC4C,KAAK,EAAEsB,GAAG,kBACjC1H,OAAA;YAAA6F,QAAA,EAAeO;UAAK,GAAXsB,GAAG;YAAA5B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAC1B;QAAC,GAHKuB,KAAK;UAAA1B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIV,CACL;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGP5F,YAAY,CAAC+E,MAAM,GAAG,CAAC,IAAIzC,YAAY,KAAK,KAAK,iBAChD3C,OAAA,CAACF,UAAU;MACT2C,WAAW,EAAEA,WAAY;MACzBwC,UAAU,EAAEA,UAAW;MACvB0C,YAAY,EAAElC;IAAiB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC/F,EAAA,CA/XID,IAAI;AAAA2H,EAAA,GAAJ3H,IAAI;AAiYV,eAAeA,IAAI;AAAC,IAAA2H,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}