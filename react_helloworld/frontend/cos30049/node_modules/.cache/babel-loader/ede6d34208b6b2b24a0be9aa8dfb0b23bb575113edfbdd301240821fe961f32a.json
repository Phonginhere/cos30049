{"ast":null,"code":"var _jsxFileName = \"/Users/phongporter/Documents/GITHUB/cos30049/react_helloworld/frontend/cos30049/src/components/Pagination.js\";\n// src/components/Pagination.js\nimport React from 'react';\nimport './Pagination.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pagination = ({\n  currentPage,\n  totalPages,\n  onPageChange,\n  itemsPerPage,\n  setItemsPerPage,\n  filteredDataLength\n}) => {\n  // Function to generate page numbers with ellipsis\n  const getPageNumbers = () => {\n    const pages = [];\n    const maxPageNumbers = 7; // Maximum page numbers to display (including ellipsis)\n    const siblingCount = 1; // Number of pages to show on each side of current page\n\n    const totalNumbers = siblingCount * 2 + 5; // totalNumbers = siblings*2 + current + first & last + two ellipsis\n    const totalBlocks = totalNumbers;\n    if (totalPages > totalBlocks) {\n      const startPage = Math.max(2, currentPage - siblingCount);\n      const endPage = Math.min(totalPages - 1, currentPage + siblingCount);\n      const hasLeftEllipsis = startPage > 2;\n      const hasRightEllipsis = endPage < totalPages - 1;\n      const firstPages = [1];\n      const lastPages = [totalPages];\n      const middlePages = [];\n      for (let i = startPage; i <= endPage; i++) {\n        middlePages.push(i);\n      }\n      if (hasLeftEllipsis && !hasRightEllipsis) {\n        // Left ellipsis, no right ellipsis\n        return [...firstPages, '...', ...middlePages, ...lastPages];\n      }\n      if (!hasLeftEllipsis && hasRightEllipsis) {\n        // Right ellipsis, no left ellipsis\n        return [...firstPages, ...middlePages, '...', ...lastPages];\n      }\n      if (hasLeftEllipsis && hasRightEllipsis) {\n        // Both ellipsis\n        return [...firstPages, '...', ...middlePages, '...', ...lastPages];\n      }\n    }\n\n    // If total pages less than max, show all pages\n    const allPages = [];\n    for (let i = 1; i <= totalPages; i++) {\n      allPages.push(i);\n    }\n    return allPages;\n  };\n  const pageNumbers = getPageNumbers();\n\n  // Handle Previous Button Click\n  const handlePrevious = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  // Handle Next Button Click\n  const handleNext = () => {\n    if (currentPage < totalPages) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  // Handle Items Per Page Change\n  const handleItemsPerPageChange = e => {\n    const value = e.target.value;\n    if (value === 'all') {\n      setItemsPerPage(filteredDataLength); // Display all rows\n    } else {\n      setItemsPerPage(Number(value));\n    }\n    onPageChange(1); // Reset to first page when items per page changes\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagination-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items-per-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"itemsPerPage\",\n        children: \"Rows per page:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"itemsPerPage\",\n        value: itemsPerPage === filteredDataLength ? 'all' : itemsPerPage,\n        onChange: handleItemsPerPageChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 10,\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 20,\n          children: \"20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 50,\n          children: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 100,\n          children: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrevious,\n        disabled: currentPage === 1,\n        className: \"pagination-button\",\n        children: \"\\u2190 Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), pageNumbers.map((number, index) => {\n        if (number === '...') {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ellipsis\",\n            children: \"...\"\n          }, `ellipsis-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onPageChange(number),\n          className: `pagination-button ${currentPage === number ? 'active' : ''}`,\n          children: number\n        }, number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        disabled: currentPage === totalPages,\n        className: \"pagination-button\",\n        children: \"Next \\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_c = Pagination;\nexport default Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Pagination","currentPage","totalPages","onPageChange","itemsPerPage","setItemsPerPage","filteredDataLength","getPageNumbers","pages","maxPageNumbers","siblingCount","totalNumbers","totalBlocks","startPage","Math","max","endPage","min","hasLeftEllipsis","hasRightEllipsis","firstPages","lastPages","middlePages","i","push","allPages","pageNumbers","handlePrevious","handleNext","handleItemsPerPageChange","e","value","target","Number","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","onClick","disabled","map","number","index","_c","$RefreshReg$"],"sources":["/Users/phongporter/Documents/GITHUB/cos30049/react_helloworld/frontend/cos30049/src/components/Pagination.js"],"sourcesContent":["// src/components/Pagination.js\nimport React from 'react';\nimport './Pagination.css';\n\nconst Pagination = ({\n  currentPage,\n  totalPages,\n  onPageChange,\n  itemsPerPage,\n  setItemsPerPage,\n  filteredDataLength,\n}) => {\n  // Function to generate page numbers with ellipsis\n  const getPageNumbers = () => {\n    const pages = [];\n    const maxPageNumbers = 7; // Maximum page numbers to display (including ellipsis)\n    const siblingCount = 1; // Number of pages to show on each side of current page\n\n    const totalNumbers = siblingCount * 2 + 5; // totalNumbers = siblings*2 + current + first & last + two ellipsis\n    const totalBlocks = totalNumbers;\n\n    if (totalPages > totalBlocks) {\n      const startPage = Math.max(2, currentPage - siblingCount);\n      const endPage = Math.min(totalPages - 1, currentPage + siblingCount);\n      const hasLeftEllipsis = startPage > 2;\n      const hasRightEllipsis = endPage < totalPages - 1;\n\n      const firstPages = [1];\n      const lastPages = [totalPages];\n\n      const middlePages = [];\n      for (let i = startPage; i <= endPage; i++) {\n        middlePages.push(i);\n      }\n\n      if (hasLeftEllipsis && !hasRightEllipsis) {\n        // Left ellipsis, no right ellipsis\n        return [...firstPages, '...', ...middlePages, ...lastPages];\n      }\n\n      if (!hasLeftEllipsis && hasRightEllipsis) {\n        // Right ellipsis, no left ellipsis\n        return [...firstPages, ...middlePages, '...', ...lastPages];\n      }\n\n      if (hasLeftEllipsis && hasRightEllipsis) {\n        // Both ellipsis\n        return [...firstPages, '...', ...middlePages, '...', ...lastPages];\n      }\n    }\n\n    // If total pages less than max, show all pages\n    const allPages = [];\n    for (let i = 1; i <= totalPages; i++) {\n      allPages.push(i);\n    }\n    return allPages;\n  };\n\n  const pageNumbers = getPageNumbers();\n\n  // Handle Previous Button Click\n  const handlePrevious = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  // Handle Next Button Click\n  const handleNext = () => {\n    if (currentPage < totalPages) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  // Handle Items Per Page Change\n  const handleItemsPerPageChange = (e) => {\n    const value = e.target.value;\n    if (value === 'all') {\n      setItemsPerPage(filteredDataLength); // Display all rows\n    } else {\n      setItemsPerPage(Number(value));\n    }\n    onPageChange(1); // Reset to first page when items per page changes\n  };\n\n  return (\n    <div className=\"pagination-container\">\n      {/* Items Per Page Selection */}\n      <div className=\"items-per-page\">\n        <label htmlFor=\"itemsPerPage\">Rows per page:</label>\n        <select\n          id=\"itemsPerPage\"\n          value={itemsPerPage === filteredDataLength ? 'all' : itemsPerPage}\n          onChange={handleItemsPerPageChange}\n        >\n          <option value={10}>10</option>\n          <option value={20}>20</option>\n          <option value={50}>50</option>\n          <option value={100}>100</option>\n          <option value=\"all\">All</option>\n        </select>\n      </div>\n\n      {/* Pagination Controls */}\n      <div className=\"pagination-controls\">\n        <button\n          onClick={handlePrevious}\n          disabled={currentPage === 1}\n          className=\"pagination-button\"\n        >\n          &#8592; Previous\n        </button>\n\n        {pageNumbers.map((number, index) => {\n          if (number === '...') {\n            return (\n              <span key={`ellipsis-${index}`} className=\"ellipsis\">\n                ...\n              </span>\n            );\n          }\n\n          return (\n            <button\n              key={number}\n              onClick={() => onPageChange(number)}\n              className={`pagination-button ${\n                currentPage === number ? 'active' : ''\n              }`}\n            >\n              {number}\n            </button>\n          );\n        })}\n\n        <button\n          onClick={handleNext}\n          disabled={currentPage === totalPages}\n          className=\"pagination-button\"\n        >\n          Next &#8594;\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Pagination;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}